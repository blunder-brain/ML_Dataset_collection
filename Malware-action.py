import os
import subprocess
import psutil
import json

def disconnect_network():

    os.system('ipconfig /release')

def send_alerts(malware_info):
    ctypes.windll.user32.MessageBoxW(0, f"Malware detected: {malware_info}", "Alert", 1)
    #print('Malware detected:', malware_info)

def collect_info(file_path):
    malware_info = {}
    malware_info['location'] = os.path.abspath(file_path)
    cmd = ['powershell.exe', 'Get-FileHash', '-Algorithm', 'SHA256', file_path]
    output = subprocess.check_output(cmd).decode()
    lines = output.split('\n')
    for line in lines:
        if 'SHA256' in line:
            malware_info['hash'] = line.split()[1]
            break
    return malware_info

def write_to_file_info(file_path, data):
    with open(file_path, 'w') as f:
        f.write(json.dumps(data, indent=4))

def start_defender_scan():
    program_files_path = os.environ['ProgramFiles']
    defender_path = os.path.join(program_files_path, 'Windows Defender', 'MpCmdRun.exe')
    subprocess.Popen(f'"{defender_path}" -Scan -ScanType 1')

def handle_malware(file_path, output_file_path):

    disconnect_network()

    # Verify the activities of the detected .exe file
    for proc in psutil.process_iter(['pid', 'name']):
        if proc.info['name'] == file_path:
            # If the .exe file is running, terminate its processes
            proc.kill()

    malware_info = collect_info(file_path)
    write_to_file_info(output_file_path, malware_info)
    send_alerts(malware_info)
    os.remove(file_path)
    start_defender_scan()
    subprocess.call('rstrui.exe')

if __name__ == "__main__":
    file_path = 'Malware file path'  
    output_file_path = 'output file path'
    handle_malware(file_path, output_file_path)
